plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        consumerProguardFiles 'consumer-rules.pro'
        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        prefab true
    }

    externalNativeBuild {
        cmake {
            path file('./src/main/cpp/CMakeLists.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lint {
        abortOnError false
        checkOnly 'NewApi', 'InlinedApi'
        checkReleaseBuilds false
        disable 'UnusedResources', 'RestrictedApi'
        textOutput file('stdout')
        textReport false
        warningsAsErrors false
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.1'

    implementation "org.lsposed.hiddenapibypass:hiddenapibypass:$rootProject.ext.hiddenApiBypass"
    implementation "com.iqiyi.xcrash:xcrash-android-lib:$rootProject.ext.xCrash"

    implementation project(':BCore:black-fake')
    implementation project(':BCore:black-hook')
    implementation project(':BCore:xposed')
    implementation project(':android-mirror')

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
